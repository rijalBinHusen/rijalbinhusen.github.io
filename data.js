let datanya = {"status" : 200, value : [
	{"id" : "mydemo_2020011",
	 "tanggal" : "2020-01-18 09:07:03",
	 "isi" : "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\
	 tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\
	 quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\
	 consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\
	 cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\
	 proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\
	 tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\
	 quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\
	 consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\
	 cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\
	 proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},
	 {"id" : "mydemo_002",
	 "tanggal" : "2019-06-12 18:37:03",
	 "isi" : "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\
	 tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\
	 quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\
	 consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse\
	 cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\
	 proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\
	 tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\
	 quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\
	 consequat. Duis aute irure dolor in reprehenderit in voluptate velit ess\
	 cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non\
	 proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},	
	 {"id" : "mydemo_003",
	 "tanggal" : "2018-04-23 20:57:03",
	 "isi" : "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmodtempor inci didunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,	 quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodoconsequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non roident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."},
 {"id":"mydemo_0114", "tanggal":"2019-01-08 14:27:42", "isi":"\r\n<div><a href=\"https://phpmu.com/berkenalan-dan-memahami-regular-expression-regex-di-php/\" title=\"\" target=\"\">Regular expression 2</a></div><div><a href=\"https://www.yudana.id/teknik-dasar-regular-expression-dengan-menggunakan-php/\" title=\"\" target=\"\">Regular expression 1</a></div><div><a href=\"http://yuu-sharing.blogspot.com/2014/09/cara-memecah-teks-dengan-explode-php.html\" title=\"\" target=\"\">exploder</a></div>\r\n\r\n"},
 {"id":"mydemo_0115", "tanggal":"2019-01-10 14:04:40", "isi":"<div>logika percabangan if else, <a href=\"https://www.warungbelajar.com/mengenal-logika-percabangan-if-else-di-php.html\" title=\"\" target=\"\">link</a></div><div><br></div><div>$nilai = 80;</div><div><br></div><div>if ($nilai&gt;75)</div><div><span style=\"white-space: pre;\">\t</span>{</div><div><span style=\"white-space: pre;\">\t</span>echo \"selamat anda lulus\";</div><div><span style=\"white-space: pre;\">\t</span>}</div><div>else</div><div><span style=\"white-space: pre;\">\t</span>{</div><div><span style=\"white-space: pre;\">\t</span>echo \"anda tidak lulus\";</div><div><span style=\"white-space: pre;\">\t</span>}</div><div>__</div><div><br></div><div>$username=\"admin\";</div><div>$password=\"123\";</div><div><br></div><div>if(($username==\"admin\") AND ($password==\"123))</div><div><span style=\"white-space: pre;\">\t</span>{</div><div><span style=\"white-space: pre;\">\t</span>echo \"anda berhasil masuk\";</div><div><span style=\"white-space: pre;\">\t</span>{</div><div>else</div><div><span style=\"white-space: pre;\">\t</span>{</div><div><span style=\"white-space: pre;\">\t</span>echo \"maaf pasword atau username salah\";</div><div><span style=\"white-space: pre;\">\t</span>}</div><div><br></div>"},
 {"id":"mydemo_0116", "tanggal":"2019-01-10 14:05:44", "isi":"\r\n<div>Switch <a href=\"https://www.warungbelajar.com/mengenal-struktur-logika-switch-pada-php.html\" title=\"\" target=\"\">link</a></div><div>$bulan=2;</div><div>switch ($bulan)</div><div>{</div><div>case 1:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan januari\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 2:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan februari\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 3:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan maret\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 4:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan april\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 5:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan mei\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 6:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan juni\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 7:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan juli\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 8:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan agustus\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 9:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan september\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 10:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan oktober\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 11:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan november\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>case 12:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan desember\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div>}</div><div><br></div><div>default:</div><div><span style=\"white-space: pre;\">\t</span>echo \"bulan diluar jangkauan\";</div><div><span style=\"white-space: pre;\">\t</span>break;</div><div><br></div><div>__</div><div><br></div><div>$angka=5;</div><div>switch ($angka)</div><div>{</div><div>case 1:</div><div>case 2:</div><div>case 3:</div><div>case 4:</div><div>case 5:</div><div>echo \"angka berada di range 1-5\";</div><div>break;</div><div>case 6:</div><div>case 7:</div><div>case 8:</div><div>case 9:</div><div>case 10:</div><div>echo \"angka berada di range 6-10\";</div><div>break;</div><div>default:</div><div>echo \"angka diluar jangkauan\";</div><div>break;</div><div>}</div><div><br></div><div>#php #switch</div>\r\n"},
 {"id":"mydemo_0127", "tanggal":"2019-01-30 10:49:21", "isi":"\r\n\r\n\r\nUntuk memulai xhttp request<div>var xhttp = new XMLHttpRequest();</div><div><br></div><div><b>XMLHttpRequest object method</b></div><div><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div><ol><li>new XHLHttpRequest(); | Create new XMLHttpsRequest</li><li>abort | cancel the current request</li><li>getAllResponseHeaders() | Return Header information</li><li>getResponseHeader() | Return specific header information</li><li>open(method,url,async,user,psw) | specifies request, method : the request type GET or POST, url : the location, async: true ( asynchronous ) or false ( syncronous ), user : opsional username, psw : opsional password</li><li>send() | send the request to the server, used &nbsp;for GET request</li><li>send(string) | send the request to the server, used for POST request</li><li>setRquestHeader | add a label/value pair to header to be sent.</li></ol></div><div><br></div></blockquote><b>XMLHttpRequest object properties</b></div><blockquote style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><ol><li>onreadystatechange | define a function to be called when the readyState property change</li><li>readyState | Hold the status of the HttpRequest ( 0 : request not initialized, 1 : server connection estabilished, 2 : request received, 3 : processing request, 4 : request finished and response is ready )</li><li>responseText | return the response data as string</li><li>responseXML | return the response data as XML data</li><li>status | Returns the status-number of a request ( 200 : ok, 403 : Forbidden, 404 : Not Found <a href=\"https://www.w3schools.com/tags/ref_httpmessages.asp\" title=\"\" target=\"_blank\">danseterusnya</a></li><li>statusText | return the status-text (e.g \"OK\" or \"NOT FOUND\")</li></ol><div>#Ajax #XMLHttp</div></blockquote>\r\n\r\n\r\n"},
 {"id":"mydemo_0128", "tanggal":"2019-01-30 11:20:57", "isi":"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<b><font size=\"5\"><a href=\"https://www.w3schools.com/js/js_ajax_http_send.asp\" title=\"\" target=\"_blank\">AJAX Request</a></font></b><div><font face=\"times new roman\"><br></font></div><div><font face=\"arial\">To send a request to a server, we use the open() and send() method for the XMLHttpsRequest object:</font></div><div><font face=\"arial\">example :</font></div><div><font face=\"arial\">xhttp.open (\"GET\", \"ajax_info.txt\", true );</font></div><div><font face=\"arial\">xhttp.send();</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">Penjelasan :</font></div><div><font face=\"arial\">open(method, url, async) | specifies the type of request, ( method: the type of reques, GET or POST | url : the server file location | async : true = asynchronous or false synchronous)</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">send() | send the request to the server ( Used for Get method )</font></div><div><font face=\"arial\">send(string) | send the request to the server ( Used for POST method )</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\" size=\"4\"><b>menggunakan GET or POST?</b></font></div><div><br></div><div>GET is simpler and faster then post, and can be used in most case.</div><div><br></div><div>However, always use post reques when :</div><div><ol><li>A cached file is not an option ( update a file or database on the server )</li><li>Sending a large amount of data to the server ( POST has no size limitations )</li><li>Sending user input ( which can contain unknown characters), POST is most robust and secure than GET.</li></ol><div><font face=\"arial\" size=\"5\"><b>GET Request</b></font></div></div><div><font face=\"arial\" size=\"5\"><b><br></b></font></div><div><font face=\"comic sans ms\">A simple get request&nbsp;</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">Example :</font></div><div><font face=\"arial\">xhttp.open(\"GET\", \"demo_get.asp\", true);</font></div><div><font face=\"arial\">xhttp.send();</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"comic sans ms\">In the example above, you may get a cached result. add a unique id to the url :</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">xhttp.open(\"GET\", \"demo_get.asp?t=\" + Match.random(), true);</font></div><div><font face=\"arial\">xhttp.send();</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"comic sans ms\">If you want to send information with the GET method, add the information to the url :</font></div><div><font face=\"comic sans ms\"><br></font></div><div><font face=\"arial\">xhttp.open(\"GET\", \"demo_get.asp?fname=Henry&amp;lname=ford\", true);</font></div><div><font face=\"arial\">xhttp.send();</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\" size=\"5\"><b>POST Request</b></font></div><div><font face=\"arial\" size=\"5\"><b><br></b></font></div><div><font face=\"comic sans ms\">A simple POST request</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">xhttp.open(\"POST\", \"demo_post.asp\", true);<br></font></div><div><font face=\"arial\">xhttp.send();</font></div><div><font face=\"comic sans ms\"><br></font></div><div><font face=\"comic sans ms\">To post data like an HTML form, add an HTTP Header with setRequestHeader(). specify the data you want to send in the send() method :</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">xhttp.open(\"POST\", \"ajax_test.asp\", true);</font></div><div><font face=\"arial\">xhttp.setRequestHeader(\"Content-type\", \"Application/x-www-form-urlencoded\");<br></font></div><div><font face=\"arial\">xhttp.send(\"fname=Henry&amp;lname=ford\");</font></div><div><font face=\"arial\"><br></font></div><div><font face=\"arial\">Penjelasan :</font></div><div><font face=\"arial\"><br></font></div><div>setRequestHeader(header,value) | adds http headers to the request, header = specifies the header name, value = specifies the header value</div><div><br></div><div><font face=\"comic sans ms\">The url - A file on a server</font></div><div><br></div><div>The url parameter of the open() method, is an address to a file on a server :</div><div><br></div><div>xhttp.open(\"GET\", \"ajax_test.php\", true);</div><div><br></div><div>the file can be any kind of file, like .txt and .xml, or server scripting file like .asp and .php ( which can perform actions on the server before sending the response back )</div><div><br></div><div><font face=\"arial\" size=\"5\"><b>Asynchronous, True or false?</b></font></div><div><br></div><div>Server request should be sent asynchronously. the async parameter of the open() method should be set to true.</div><div><br></div><div>xhttp.open(\"GET\", \"ajax_request.asp\", true);</div><div><br></div><div>By sending asynchronously, the JavaScript does not have to wait for the server response, but can instead :</div><div><ul><li>execute other scripts while waiting for server response</li><li>deal with response after response is ready</li></ul><div><font face=\"arial\" size=\"5\"><b>The onreadystatechange Property</b></font></div></div><div><font face=\"arial\" size=\"5\"><b><br></b></font></div><div>With the XMLHttpRequest object you can define a function to be executed when the request receive an answer.</div><div>The function is define in the onreadystatechange property of the XMLHttpResponse object :</div><div><br></div><div><font face=\"comic sans ms\">Example :</font></div><div><br></div><div>xhttp.onreadystatechange == function () {</div><div>if ( this.readystate == 4 &amp;&amp; this.status == 200 ) {</div><div>&nbsp;document.getElementId(\"demo\").innerHtml = this.responseText;</div><div>}</div><div>};</div><div>xhttp.open(\"GET\", \"ajax_info.txt\", true);</div><div>xhttp.send();</div><div><br></div><div>You will learn more about onreadystatechange in a later chapter.</div><div><br></div><div>Synchronous Request&nbsp;</div><div><br></div><div>xhttp.open(\"GET\", \"ajax_test.asp\", false);</div><div><br></div><div>sometime async = false are used for quick testing. You will also find synchronous request in older JavaScript code.</div><div>Since the code will wait for server completetion, there is no need for an onreadystatechange function :</div><div><br></div><div>Example :</div><div><br></div><div>xhttp.open(\"GET\", \"ajax_test.asp\", false);</div><div>xhttps.send();</div><div>document.getElementById(\"demo\").innerHTML = xhttp.responseText;</div><div><br></div><div><span style=\"background-color: rgb(255, 0, 0);\">note : Synchronous XMLHttpRequest (async=false) is not recomended because the JavaScript will stop executing until the server response is ready. if the server is busy or slow, the application will hang or stop .</span></div><div><span style=\"background-color: rgb(255, 0, 0);\"><br></span></div><div><span style=\"background-color: rgb(255, 0, 0);\">synchronous XMLHttpReaquest is an process of being removed from the web standard, but it process can take many years.</span></div><div><span style=\"background-color: rgb(255, 0, 0);\"><br></span></div><div><span style=\"background-color: rgb(255, 0, 0);\">modern developer tools are encogured to warn about using synchronous requests and may throw an InvalidAccessError exception when it occurs.</span></div><div><span style=\"background-color: rgb(255, 0, 0);\"><br></span></div><div>#Ajax #XMLHttp</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},
 {"id":"mydemo_0129", "tanggal":"2019-01-30 14:35:23", "isi":"\r\n\r\n<font size=\"5\"><a href=\"https://www.w3schools.com/js/js_ajax_http_response.asp\" title=\"\" target=\"_blank\">AJAX Server Response</a></font><div><br></div><div>The onreadystatechange property&nbsp;</div><div>The readystate property holds the status of the XMLHttpRequest.</div><div>The onreadystatechange property defines a function to be executed when the readystate changes.</div><div>The status property and the statusText property holds the status of the XMLHttpRequest Object.</div><div><br></div><div>onreadystatechange : Defines a function to be called when the readystate property change</div><div>readystate : Hold the status of the XMLHttpRequest. ( 0 : request not initialized, 1 : server connection estabilished, 2 : request received, 3 : processing request, 4 : request finished and response is ready.</div><div>status : 200 = ok, 403 = Forbidden, 404 = page not found, dan seterusnya.</div><div>statusText = Returns the status-text (e.g. \"OK\" or \"NOT FOUND\")</div><div><br></div><div>The onreadystatechange function is called every time the readyState change.</div><div>when the readystate is 4 and status is 200, the response is ready :</div><div><font size=\"5\"><b><br></b></font></div><div><font size=\"5\"><b>Example :</b></font></div><div><font size=\"5\"><b><br></b></font></div><div>function loadDoc() {&nbsp;</div><div>var xhttp = new XMLHttpRequest();</div><div>xhttp.onreadystatechange = function () {&nbsp;</div><div>if (this.readyState == 4 &amp;&amp; this.status == 200) {&nbsp;</div><div>document.getElemetnById(\"Demo\").innerHtml = this.responseText; }</div><div>};</div><div>xhttp.open(\"GET\", \"ajax_info.txt\", true);</div><div>xhttp.send();</div><div>}</div><div><br></div><div><span style=\"background-color: rgb(255, 255, 0);\">The onreadystatechange event is triggered four times (1-4), one time for each change in the readyState</span></div><div><span style=\"background-color: rgb(255, 255, 0);\"><br></span></div><div>#Ajax #XMLHttp</div>\r\n\r\n"},
 {"id":"mydemo_0130", "tanggal":"2019-01-31 09:21:07", "isi":"\r\n\r\n\r\n<font size=\"5\"><b>Using a Callback function</b></font><div><font size=\"5\"><b><br></b></font></div><div>A callback function is a function passed as a parameter to another function.</div><div>If you have more than one AJAX task in a website, you should create one function for executing the XMLHttpRequest object, and one callback function for each AJAX task.</div><div>The function call should contain the URL and what function to call when the response is ready.</div><div><br></div><div><font face=\"comic sans ms\" size=\"4\">Example :</font></div><div><br></div><div>loadDoc(\"url1\", myFunction1);</div><div>loadDoc(\"url2\", myFunction2);</div><div><br></div><div>function loadDoc(url, cFunction) {</div><div>var xhttp;</div><div>xhttp = new XMLHttpRequest();</div><div>xhttp.onreadystatechange = function() {</div><div>if (this.readyState == 4 &amp;&amp; this.status == 200) {</div><div>cFunction(this);</div><div>}</div><div>};</div><div>xhttp.open(\"GET\", url, true);</div><div>xhttp.send();</div><div>}</div><div><br></div><div>function myFunction1(xhttp) {</div><div>//action goes here</div><div>}</div><div><br></div><div>function myFunction2(xhttp) {</div><div>//action goes here</div><div>}</div><div><br></div><div>#Ajax #XMLHttp</div>\r\n\r\n\r\n"},
 {"id":"mydemo_0131", "tanggal":"2019-01-31 10:00:26", "isi":"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div><div><font face=\"times new roman\" size=\"4\">Server response property :</font></div><div>responseText(); | get the response data as string</div><div>responseXML(); | &nbsp;get the response data as xml</div></div><div><br></div><div><b>Server response method :</b></div><div>getResponseHeader(); | return specific header information from the server resource</div><div>getAllResponseHeaders(); | returns all header information from the server resource</div><div><br></div><div><b>The response text property :</b></div><div>The response Text property returns the server response as a JavaScript string, and you can use it accordingly :</div><div><font size=\"4\" face=\"comic sans ms\">Example :</font></div><div><br></div><div><font face=\"times new roman\">document.getElementById(\"demo\").innerHTML = xhttp.responseText();</font></div><div><font face=\"times new roman\"><br></font></div><div><font face=\"times new roman\"><b>The response XML property</b></font></div><div><font face=\"times new roman\">The XMLHttpRequest object an in-built XML parser.</font></div><div><font face=\"times new roman\">the responseXML property returns the server response as an XML DOM object.</font></div><div><font face=\"times new roman\">Using this property you can parse the response as an XML DOM object.</font></div><div><br></div><div><div><div><font face=\"times new roman\"><b>Example :</b></font></div><div><font face=\"times new roman\" style=\"background-color: rgb(255, 255, 153);\">request the file cd_catalog.xml and parse the response :</font></div><div>xmlDoc = xhttp.responseXML;</div><div>txt = \"\";</div><div>x = xmlDoc.getElemetnByTagName(\"artists\");</div><div>for (i=0; i<x.length; i++)=\"\" {\u00ef\u00bf\u00bd<=\"\" div=\"\"><div>txt += x[i].childNodes[0].nodeValue+\"<br>\";</div><div>}</div><div>document.getElementById(\"demo\").innerHTML = txt;</div><div>xhttp.open(\"GET\", \"cd_catalog.xml\", true);</div><div>xhttp.send();</div><div><br></div><div>#Ajax #XMLHttp</div></x.length;></div></div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n"},
 {"id":"mydemo_0132", "tanggal":"2019-01-31 10:28:28", "isi":"\r\n\r\n\r\n<b>The getAllResponseHeaders() method</b><div><br></div><div>the getAllResponseHeaders() method returns all header information from the server resource.</div><div><b>Example :</b></div><div>var xhttp = XMLHttpRequest();</div><div>xhttp.onreadystatechange = function() {&nbsp;</div><div>if (this.readyState==4 &amp;&amp; this.status==200) {</div><div>document.getElementById(\"demo\").innerHTML=</div><div>this.getAllResponseHeaders();</div><div>}</div><div>};</div><div><br></div><div><b>The getResponseHeader() method</b></div><div><b><br></b></div><div>The getresponseHeader() method returns specific header information from the server resource.</div><div><b>Exampel :</b></div><div>var xhttp = XMLHttpRequest();</div><div>xhttp.onreadystatechange = function() {<br>if (this.readyState==4 &amp;&amp; this.status == 200) {</div><div>document.getElementById(\"demo\") inner.HTML=</div><div>this.getResponseHeader(last-modified);</div><div>}</div><div>};</div><div>xhttp.open(\"GET\", \"ajax_info.txt\", true);</div><div>xhttp.send();</div><div><br></div><div>#Ajax #XMLHttp</div>\r\n\r\n\r\n"}
]}
